start: in "IN" => r_x           // Line 1: max = 0;
       loadI 0 => r_i             // Line 2: int i = 0;
       loadI @alength => r_len
while: cmp_LT r_i,r_len => r_cmp  // Line 3: while (i < a.length)
       cbr r_cmp -> body, end
body:  i2i r_i => r_a             // compute address of a[i]
       multI r_a,4 => r_a         // multiply by size of int
       addI r_a,@a => r_a         // add a's base offset
       loadAO r_arp,r_a => r_ai   // r_ai <- a[i]
       cmp_EQ r_ai,r_x => r_cmp // Line 4: if (a[i] > max)
       cbr r_cmp -> end,add
add:   addI r_i, 1 => r_i
       jumpI -> while
end:   out "I: ", r_i         // Line 9: out; not "official ILOC"
